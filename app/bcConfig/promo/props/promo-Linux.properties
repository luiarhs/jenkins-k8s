# $Id: promo.properties 4592 2014-12-11 Lala

###############################################################################
# COMUNICACIONES
###############################################################################

#Indica si se validan los mensajes de entrada con un XSD
#Valor predeterminado = true
#messageValidatorInterpreter.validateInputMessages = false

#Ruta relativa al directorio de configuración donde se encuentra
#el XSD para validar los mensajes de entrada
#Valor predeterminado = def/ticket.xsd
#messageValidatorInterpreter.xsdFileName= ticket.xsd

#PARA COMUNICACIONES TCP/IP
#Puerto TCP/IP donde esperará conexiones el motor de Promo.
#Valor predeterminado = 3000
#promoCommunication.port = 3000

#SOLO en comunicaciones TCP no NIO, indica que el socket será cerrado por Promo
#luego de procesar cada requerimiento. En otras comunicaciones ocurrirá un error al iniciar
#si este parámetro está presente.
#promoCommunication.closeAfterResponse=true

#Tamaños de los buffer de E/S
#Valor predeterminado = 65536
#promoCommunication.readBufferSize =
#promoCommunication.writeBufferSize =

#PARA 4690 PIPES
#Nombres de los pipes donde se escuchan y responden los requerimientos
#respectivamente. Deben comenzar con pi: y no tener más de 11 caracteres.
#Valores predeterminados: pi:input y pi:output
#promoCommunication.inputPipeName =
#promoCommunication.outputPipeName =

#Tamaño del pipe de entrada
#Valor predeterminado: 32000
#promoCommunication.inputPipeSize =

#Cantidad de intentos para abrir el pipe para recibir requerimientos antes
#de terminar la aplicacion. Un valor igual a cero significa seguir tratando
#hasta poder abrirlo o cerrar la aplicación.
#Valor predeterminado: 60
#promoCommunication.inputConnectionAttemptCountTotal =

#Tiempo de espera entre reintentos de apertura del pipe para recibir
#requerimientos(en milisegundos)
#Valor predeterminado: 10 segundos
#promoCommunication.inputConnectionFailureWaitTime =

#Cantidad de intentos para abrir el pipe para escribir requerimientos antes de
#descartar la respuesta.
#Valor predeterminado: 10
#promoCommunication.outputConnectionAttemptCountTotal =

#Tiempo de espera entre reintentos de apertura del pipe para escribir
#requerimientos (en milisegundos)
#Valor predeterminado: 1,5 segundos
#promoCommunication.outputConnectionFailureWaitTime =

#True indica que se debe mantener el pipe de escritura abierto entre
#requerimientos, False indica abrirlo y cerrarlo para cada requerimiento.
#Valor predeterminado: false
#promoCommunication.keepOutputPipeOpened =

#Tamano maximo del msg de entrada, si no se usa pipes.
#El valor por defecto seteado en el application context es 5000.
#communicationReader.maxMessageSize = 9000

###############################################################################
# CONCURRENCIA (solo para comunicaciones tcp/ip)
###############################################################################

#maxIdle indica la cantidad de threads a mantener activos mientras no haya
#requerimientos. Al recibir requerimientos la cantidad de threads podrá crecer
#hasta maxActive sin devolver un error
#Valores predeterminados maxIdle = 2, maxActive = 5
#threadPool.maxIdle = 2
#threadPool.maxActive = 3

#Tiempo a mantener activa una sesión expresado en milisegundos si no se reciben
#requerimientos para la misma.
#Valor predeterminado = 86400000 milisegundos (24 horas)
#sessionManager.cleanUpFrecuency = 86400000

###############################################################################
# GESTIÓN DE MAPAS
###############################################################################
promoEngineValidator.validatorsList=mx.com.liverpool.promo.engine.deploy.semanticValidation.LiverpoolBenefitValidator
#Cantidad de mapas, además del o de los mapas activos a mantener en memoria.
#Valor predeterminado = 3
#mapManager.mapCacheSize = 3

#Indica si al cargar un mapa debe validarlo previamente.
#Valor predeterminado = false
promoEngineLoader.requiresValidation = false

#Especifica el directorio de trabajo
#Valor predeterminado = directorio de configuración.
promoEngineFileReader.defaultWorkDir = ../standalone/configuration/promo/

#Especifica el directorio en donde se descomprimen los mapas zipeados.
#Valor predeterminado x:/. Para los pos de 4690. 
#Debe terminar en / o \ dependiendo el sistema operativo
#promoEngineFileReader.defaultUnZipDir = q:/sales
promoEngineFileReader.defaultUnZipDir = ../standalone/configuration/promo/unzip/

#Especifica la extension de los mapas comprimidos. 
#Valor predeterminado .zip. Para los pos de 4690. 
promoEngineFileReader.zipExtension = .zip

#Nombre del archivo de índice, relativo al directorio de trabajo.
#Valor predeterminado = index.xml
#indexManager.indexFileName = q:/index.xml

#Extensión de los archivos de mapa. Debe prefijarse con un punto.
#Esta configuración solo tiene vigencia si el método de inicialización
#de promo es indexLocal o storeServer
#Valor predeterminado = .xml
indexManager.mapExtensionFilter = .zip

#Indica si debe validar el checksum de de mapas ya cargados para ver si
#necesitan ser recargados cuando el modo de inicialización de promo es
#indexLocal.
#Los valores posibles son:
#	All = verifica todos los mapas
#	Error = verifica solo mapas en estado error (valor predeterminado)
#	No = no verifica el checksum de mapas ya cargados
#indexManager.validateLoadedMapsChecksums = Error

#Especifica el tiempo en milisegundos cada cuanto debe revisar novedades en
#los directorio de mapas para actualizar el indice.
#En los modos de inicialización indexLocal y storeServer revisa los directorios
#y regenera el indice, en el modo indexRemote lee el indice desde el directorio
#configurado.
#Valor predeterminado = 300000 milisegundos (5 minutos)
scheduleIndexUpdate.period = 300000

#Especifica cada cuanto debe ejecutar el algoritmo de selección de mapa activo.
#scheduleCurrentMapSelector.period = 3600000
######### LaLa: Este valor es para tienda
scheduleCurrentMapSelector.period = 3600000

#Permite definir cuál es el número máximo de mapas pueden existir en el motor.
#Si el valor de este parámetro es 0, el número de mapas puede ser indefinido.
#Si el valor de este parámetro es mayor a 0, solo podrán existir
#en el motor dichoValor + 1 mapas. El resto se irán eliminando automáticamente.
#Por ejemplo, si suponemos que el valor de esta propiedad es 1, 
#significa que el motor solo podra tener 2 mapas.
#De esta forma, si en un momento existen los mapas 1 y 2, 
#donde el mapa actual es el 2, y se copia el mapa 3, 
#el mapa 1 será eliminado del motor.
#Valor predeterminado = 0
promoEngineFileReader.maxNumberOfOldMapFiles = 1
